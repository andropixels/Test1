
//! Autogenerated weights for `pallet_club`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-08, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `sangeet`, CPU: `AMD Ryzen 5 4500U with Radeon Graphics`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_club
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/club/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight,  sp_std::marker::PhantomData,};
// use frame_benchmarking::sp_std::marker::PhantomData;
pub trait WeightInfo {
	 fn create_club()  -> Weight;
	 fn add_member(_m: u32, ) -> Weight;
	 fn remove_member(m: u32, ) -> Weight;
  }
/// Weight functions for `pallet_club`.
pub struct Club<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for Club<T> {
	// Storage: ClubModule Clubs (r:0 w:1)
	fn create_club() -> Weight {
		(20_970_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: ClubModule Clubs (r:1 w:0)
	// Storage: ClubModule ClubMember (r:1 w:1)
	/// The range of component `m` is `[1, 5]`.
	fn add_member(_m: u32, ) -> Weight {
		(12_345_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: ClubModule Clubs (r:1 w:0)
	// Storage: ClubModule ClubMember (r:1 w:1)
	/// The range of component `m` is `[1, 5]`.
	fn remove_member(m: u32, ) -> Weight {
		(12_454_000 as Weight)
			// Standard Error: 322_000
			.saturating_add((366_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
